<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[博客搭建]]></title>
    <url>%2Fzerotwo%2F2019%2F09%2F28%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Hexo搭建步骤1. 安装Git2. 安装nodejs安装完后，安全npm node -v npm -v 3. 安装hexo前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。 npm install -g hexo-cli hexo -v查看版本 接下来初始化一下hexo hexo init myblog myblog可以自己取名字 cd myblog //进入这个myblog文件夹 新建完成后，指定文件夹目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 ** _config.yml: 博客的配置文件** hexo server 打开hexo的服务，在浏览器输入localhost:4000就可以看到生成的博客。 使用ctrl+c可以把服务关掉。 4. GitHub创建个人仓库有一个GitHub账户 注册完登录后，在GitHub.com中看到一个New repository，新建仓库 创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。 点击create repository。 5. 生成SSH添加到GitHub回到你的git bash中， git config --global user.name &quot;yourname&quot; git config --global user.email &quot;youremail&quot; 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。 可以用以下两条，检查一下你有没有输对 git config user.name git config user.email 然后创建SSH,一路回车 ssh-keygen -t rsa -C &quot;youremail&quot; 它会告诉你已经生成了.ssh的文件夹。找到这个文件夹。 ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key 把你的id_rsa.pub里面的信息复制进去。 在gitbash中，查看是否成功 ssh -T git@github.com 6. 将hexo部署到GitHub将hexo和GitHub关联起来，将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，到最后，修改为 deploy: type: git repo: https://github.com/githubName/githubName.github.io.git（githubName就是你的GitHub账户） branch: master 先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 npm install hexo-deployer-git --save 然后 hexo clean hexo generate hexo deploy 其中 hexo clean清除了你之前生成的东西，也可以不加。 hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写 hexo deploy 部署文章，可以用hexo d缩写 注意deploy时可能要你输入username和password。 得到下图就说明部署成功了，过一会儿就可以在http://yourname.github.io博客]]></content>
  </entry>
</search>
